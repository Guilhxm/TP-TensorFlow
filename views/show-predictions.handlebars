<center>
    <h1 style="margin-top:20px;">TP TensorFlow</h1>
</center>

<br />

<div class="ui grid">
    <div class="five wide column">

        <form id="profileImgForm" max-width="150" max-height="150">
            <center><input id="monImage" name="monImage" type="file" /></center>
        </form>
        <br />
        <img id="img" src="" width="520" height="350"
            style="display: none; border: 1px solid grey; border-radius: 3px;"></img>
    </div>
    <div class="six wide column" style="max-width:330px">
        <table id="tablePredi" class="ui celled center aligned table" style="display:none; margin-top: 40px;">
            <thead>
                <tr>
                    <th colspan="2">MobileNet</th>
                </tr>
                <tr>
                    <th>Prédiction</th>
                    <th style="width: 150px">Probabilité en %</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td id="tdClassPredi"></td>
                    <td id="tdScorePredi"></td>
                </tr>
                <tr>
                    <td id="tdClassPredi1"></td>
                    <td id="tdScorePredi1"></td>
                </tr>
                <tr>
                    <td id="tdClassPredi2"></td>
                    <td id="tdScorePredi2"></td>
                </tr>
            </tbody>
        </table>

        <table id="tableCocoSSD" class="ui celled center aligned table" style="display:none;">
            <thead>
                <tr>
                    <th colspan="2">CocoSSD</th>
                </tr>
                <tr>
                    <th>Prédiction</th>
                    <th style="width: 150px">Probabilité en %</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td id="tdClass"></td>
                    <td id="tdScore"></td>
                </tr>
            </tbody>
        </table>

        <table id="tabT" class="ui celled center aligned table" style="display:none;">
            <thead>
                <tr>
                    <th colspan="2">Teachable Machine</th>
                </tr>
                <tr>
                    <th>Prédiction</th>
                    <th style="width: 150px">Probabilité en %</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td id="tdClassT1"></td>
                    <td id="tdScoreT1"></td>
                </tr>
                <tr>
                    <td id="tdClassT2"></td>
                    <td id="tdScoreT2"></td>
                </tr>
                <tr>
                    <td id="tdClassT3"></td>
                    <td id="tdScoreT3"></td>
                </tr>
                <tr>
                    <td id="tdClassT4"></td>
                    <td id="tdScoreT4"></td>
                </tr>
                <tr>
                    <td id="tdClassT5"></td>
                    <td id="tdScoreT5"></td>
                </tr>
            </tbody>
        </table>

    </div>
    <div id="tabHistorique" class="eight wide column">
        <table class="ui celled fixed padded center aligned table" style="margin-top: 40px;">
            <thead>
                <tr class="center aligned">
                    <th>Date</th>
                    <th>Nom</th>
                    <th>Taille</th>
                    <th>Analyse</th>
                    <th>Type</th>
                    <th>Actions</th>

                </tr>
            </thead>
            <tbody>
                {{#each prediction_entries}}
                <tr>
                    <td>{{this.Date}}</td>
                    <td>{{this.Nom}}</td>
                    <td class="center aligned">{{this.Taille}}</td>
                    <td class="center aligned">{{this.Analyse}}</td>
                    <td class="center aligned">{{this.Type}}</td>
                    <td class="center aligned">
                        <a onclick="deleteFunction('{{this._id}}')" id="{{this._id}}"
                            class="ui small red button">Supprimer</a>
                        {{!-- href="/delete/{{this._id}}" --}}
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</div>

<script>

    var imgfile = "";
    document.getElementById("profileImgForm").onchange = function (e) {
        e.preventDefault();
        if (e.target.files.length > 0) {
            imgfile = e.target.files[0];
        }

        var file = $("input[type=file]").get(0).files[0];
        if (file) {
            var reader = new FileReader();
            reader.onload = function () {
                $("#img").attr("src", reader.result);
            }
            reader.readAsDataURL(file);
        }

        document.getElementById("img").style.display = 'table';

        // Calcul prédictions 
        const img = document.getElementById('img');

        (async () => {
            const model = await mobilenet.load()
            const predictions = await model.classify(img)

            console.log(predictions);

            // MobileNet
            document.getElementById("tdClassPredi").innerHTML = predictions[0]['className'];
            document.getElementById("tdScorePredi").innerHTML = (predictions[0]['probability'] * 100).toFixed(2);

            document.getElementById("tdClassPredi1").innerHTML = predictions[1]['className'];
            document.getElementById("tdScorePredi1").innerHTML = (predictions[1]['probability'] * 100).toFixed(2);

            document.getElementById("tdClassPredi2").innerHTML = predictions[2]['className'];
            document.getElementById("tdScorePredi2").innerHTML = (predictions[2]['probability'] * 100).toFixed(2);

            if (predictions != undefined) {
                document.getElementById("tablePredi").style.display = 'table';
            }

            // CocoSSD
            const model2 = await cocoSsd.load()
            const cocoPredictions = await model2.detect(img)

            document.getElementById("tableCocoSSD").style.display = 'none';

            console.log('Predictions: ', cocoPredictions[0]);

            var cocoPredictions1 = cocoPredictions[0]['class'];
            var cocoPredictions2 = cocoPredictions[0]['score'];

            if (cocoPredictions[0] !== undefined) {
                document.getElementById("tdClass").innerHTML = cocoPredictions[0]['class'];
                document.getElementById("tdScore").innerHTML = (cocoPredictions[0]['score'] * 100).toFixed(2);
                document.getElementById("tableCocoSSD").style.display = 'table';
            }



            // Custom Model Teachable Machine

            const URL = "./model/";
            let modelT, labelContainer, maxPredictions;
            // Load the image model
            //async function init() {
            const modelURL = URL + "model.json";
            const metadataURL = URL + "metadata.json";

            // Load the modelT
            modelT = await tmImage.load(modelURL, metadataURL);
            maxPredictions = modelT.getTotalClasses();

            // append elements to the DOM
            labelContainer = document.getElementById("tabT");

            const predictionT = await modelT.predictTopK(img);

            for (let i = 0; i < maxPredictions; i++) {
                const classPrediction = predictionT[i].className + ': ' + predictionT[i].probability.toFixed(2);

                // labelContainer.childNodes[i].innerHTML = classPrediction;

                console.log(classPrediction);

                // console.log(predictionT[i].probability);

                if (predictionT[0] !== undefined) {

                    document.getElementById("tdClassT1").innerHTML = predictionT[0].className;
                    document.getElementById("tdClassT2").innerHTML = predictionT[1].className;
                    document.getElementById("tdClassT3").innerHTML = predictionT[2].className;
                    document.getElementById("tdClassT4").innerHTML = predictionT[3].className;
                    document.getElementById("tdClassT5").innerHTML = predictionT[4].className;

                    document.getElementById("tdScoreT1").innerHTML = (predictionT[0].probability * 100).toFixed(2);
                    document.getElementById("tdScoreT2").innerHTML = (predictionT[1].probability * 100).toFixed(2);
                    document.getElementById("tdScoreT3").innerHTML = (predictionT[2].probability * 100).toFixed(2);
                    document.getElementById("tdScoreT4").innerHTML = (predictionT[3].probability * 100).toFixed(2);
                    document.getElementById("tdScoreT5").innerHTML = (predictionT[4].probability * 100).toFixed(2);

                }
            }

            if (predictionT[0] !== undefined) {
                document.getElementById("tabT").style.display = 'table';
            }


            // Fin Tableaux


            var maDate = new Date();
            laDate = maDate.getDate() + "/" + (maDate.getMonth() + 1) + "/" + maDate.getFullYear();
            TailleImage = imgfile.size;
            NomImage = imgfile.name;

            if (predictions[0]['probability'] > cocoPredictions[0]['score']) {
                Categorie = predictions[0]['className'];
                maxValue = (predictions[0]['probability'] * 100).toFixed(2);
            } else {
                Categorie = cocoPredictions[0]['class'];
                maxValue = (cocoPredictions[0]['score'] * 100).toFixed(2);
            }

            // console.log(laDate);
            // console.log(NomImage);
            // console.log(TailleImage);
            // console.log(maxValue);
            // console.log(Categorie);

            $.ajax({
                url: "/create",
                type: "POST",
                dataType: "json",
                data: JSON.stringify({
                    "Date": laDate,
                    "Nom": NomImage,
                    "Taille": TailleImage,
                    "Analyse": maxValue,
                    "Type": Categorie
                }),
                contentType: "application/json",
                cache: false,
                timeout: 5000,
                complete: function () {
                    // called when complete
                    // console.log('process complete');
                },

                success: function (data) {
                    // console.log(data);
                    // console.log('process sucess');
                    $("#tabHistorique").load(window.location + " #tabHistorique");
                },

                error: function () {
                    console.log('process error ajax');
                },
            });


        })()

    }


    // Suppression AJAX
    function deleteFunction(element) {

        console.log(element);

        // AJAX request
        $.ajax({
            url: '/delete/' + element,
            type: 'DELETE',
            data: { },
            success: function () {

                var dataResult = JSON.parse(dataResult);
                if (dataResult.statusCode == 200) {
                    $ele.fadeOut().remove();
                }

            },
            error: function () {
                console.log('process error ajax');
            },
        });
    }
    // });

</script>